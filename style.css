/*========= RESET ================================*/
/*resetando todas as caixas 
  filhas da tag ou caixa <html>.
  As tags no CSS são tratadas como
  caixas, toda tag é uma caixa no CSS.
  É o famoso box-model.
*/
* {
  /* resetando para não dar problemas*/
  margin: 0; /*resetando a margin de todas as caixas*/
  padding: 0; /*resetando o padding de todas as caixas*/
  box-sizing: border-box;
}
/*
  a propriedade "box-sizing: ;" pega como referencia
  o conteudo ou a borda da caixa para definir
  como sera calculado o tamanho da caixa

  "box-sizing: border-box;" define
   que o tamanho das caixas seram contdos 
  aprtir da borda e não do conteudo 
  */

ul {
  list-style: none;
}

/*========= VARIABLES ================================*/
:root {
  font-size: 62.5%;
  /*reedefinindo o padrão da fonte na pagina inteira para
    62.5% de 16px (padrão dos navegadores):
      
    62.5% de 16px = 10px
    isso é para facilitar os calculos que irei realizar
    a fim de converter Pixels para a unidade de medida
    relativa "rem". 
      vez de ser a meida que se enconta no
      figma dividida por 16px:
                   MedidaDoFigma/16px = X rem
      agora vai ser:                          X equivalentes ao Y
                   MedidaDoFigma/10px = y rem    
    */
  --header-height: 7.2rem; /*autura do #header */
  --hue: 249;

  --base-color: hsl(var(--hue) 36% 57%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 98%);

  /*Fonts*/
  --title-font-size: 1.875rem;
  --subtitle-font-size: 1.6rem;

  --title-font: "Poppins", sans-serif;
  --body-font: 400 1.6rem "DM Sans", sans-serif;
}

a {
  text-decoration: none;
  /*tirando as decorações de todas as tags <a>
    . não terá o link azulado e nem sublinhado*/
}

img {
  /*deixando as imagens responsivas*/
  width: 100%;
  height: auto;
  /*a largura(width)da imagem vai se adaptar aos 
  100% da caixa pai quando aumenta ou diminui a 
  tela de visialização e o valor "auto" aplicado na height faz o mesmo com a altura da imagem*/
}

/*========= BASE ================================*/
html {
  scroll-behavior: smooth; /*para suavisar a transição
  de direcionamento das seções realizadas pelo menu e
  outros que realizam o redirecionamento... */
}

body {
  font: var(--body-font);
  /*calculei na mente, MedidaDoFigma/10px = Y */
  /*todos os filhos da caixa body
    herdaram a font-sizing de 1.6rem = 16px
    */
  color: var(--title-color);
  background-color: var(--body-color);
  -webkit-font-smoothing: antialiased;
  /*-webkit-font-smoothing: antialiased; deixa a 
  fonte com uma tonalidade mais fraca*/
}

.title {
  /*titulo principal*/
  font: 700 4.8rem "Poppins", sans-serif;
  color: var(--title-color);
  -webkit-font-smoothing: auto;
}

.button {
  background-color: var(--base-color);
  color: var(--text-color-lighttex);
  display: inline-flex; /*para habilitar algumas 
  proprieade e deixar o conteúdo/itens do botão 
  centralizado na vertical*/
  height: 5.6rem; /*habilitada graças ao display:
   inline-flex;*/
  align-items: center; /*habilitada graças ao display:
  inline-flex;*/
  padding: 0 3.2rem;
  border-radius: 0.4rem;
  font: 500 1.6rem "DM sans", sans-serif;
  transition: background 0.3s;
  /*tempo de 0.3s para a transição do background
    do botão*/
}

.button:hover {
  /*quando o mouse passar em cima do botão vai mudar
    a cor do bacground*/
  background-color: red;
}

.divider-1 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1),
    hsla(var(--hue), 65%, 88%, 0.34)
  );
}
.divider-2 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 65%, 88%, 0.34),
    /*troquei de
     posições as propriedades hsla por que o .divider-2
     é o inverso do .divider-1*/
      hsla(var(--hue), 36%, 57%, 1)
  );
}

/*======= LAYOUT ======================================*/
.container {
  /*reservando o espaço aproximado de 90% do conteúdo*/
  width: 100%; /*ferencia é uma caixa*/
  margin-left: 2.4rem;
  margin-right: 2.4rem;
}

.grid {
  display: grid; /*habilita novas possibilidades*/
  gap: 3.2rem; /*abre espaço entre elementos filhos
                  que no caso é, .text e .image*/
}

.section {
  padding: 8rem 0; /* 'top bottom' 'left right' */
}

.section .title {
  margin-bottom: 1.6rem;
}

.section header {
  margin-bottom: 6.4rem;
}

.section header strong {
  color: var(--base-color);
}

#header {
  border-bottom: 1px solid #e4e4e4;
  /*border-bottom adicionando borda inferior*/
  display: flex; /* os conteudos do herder vai se adptar */
  position: fixed;
  top: 0; /*habilitada porcaisa da declaração position*/
  left: 0; /*habilitada porcaisa da declaração position*/
  width: 100%;
  z-index: 100; /*eixos da caixa 2D são os eixos-  
   Y (vertical),X (horizontal)e Z (profundidade)
   o z-index é o eixo de prfundidade. foi habilitada
   por causa da propriedade "position" ou por ter
   seu display: flex; */
  background-color: var(--body-color);
}

#header.scroll {
  /*adiconando sombra na borda inferior do
  cabeçãlho da pagina através do JavaScript*/
  box-shadow: 0px 0px 20px gold;
  background-color: red;
}

main {
  margin-top: calc(var(--header-height) + 3.2rem);
}

/*======= LOGO ======================================*/
.logo {
  font: 700 2.1rem "Poppins", sans-serif;
  color: var(--title-color);
}

.logo span {
  /*METADE DA LOGO É VERDE*/
  color: var(--base-color);
}

/*======= NAVIGATION ======================================*/

nav {
  height: var(
    --header-height
  ); /*mais vantajoso para aplicar o 
  align-items: center;*/
  display: flex; /*colocando os elementos na horizontal*/
  justify-content: space-between;
  /*justify-content: space-between; está inserindo um 
  espaço entre os elementos da logo e do menu*/
  align-items: center; /*alinhando na vertical*/
  width: 100%;
}

/*nav .menu{} - enquanto o menu estiver fechado*/
nav .menu {
  /*é a caixa(div) do menu inicialmente*/
  opacity: 0;
  visibility: hidden;

  top: -2rem;
  transition: 0.3s;
}

nav .menu ul {
  display: none; /*quando o menu é solicitado a lista inteira incialmente ja está sendo exibida antes mesmo do menu ser
  requisitado e por causa disso estava gerando um efeito de pisca no conteúdo da lista (efeito visual desagradavel). o
  efeito visual desagradavel foi corrgido aplicando um
  display: none; na lista que remove todo tipo de visualização
  da lista enquanto o menu não for requisitado/aberto. */
}

nav ul li {
  /*centralizando horizontalmente o texto da lista 
   na caixa */
  text-align: center;
}
nav ul li a {
  /*definindo tem para a cor do texto das <a></a>
    do menu que estão sendo declaradas no seletor 
    "nav ul li a:hover {}"
    */
  transition: color 0.3s;
  position: relative; /*deixando as <a></a>
  do da caixa menu com position:relative para que
  o pseudo elemento seja absoluto sobre as ancoras
  da caixa <div class="menu"> */
}

nav ul li a:hover {
  /*ao passar o cursor do mouse sobre o texto do <a></a>
    ocorrera uma transição de cor*/
  color: var(--base-color);
}

nav ul li a::after {
  /*relacionado as acoras que estão na lista do menu.
    ao passar o cursor do mouse sobre as opções do menu
    uma barrinha a baixo dos textos realizará uma 
    transição de 100% de largura(em relação as <a></a>)
    até o lado direito.
  */
  content: ""; /*o valor de aspas vazias siginifa que é
                somente uma folha trasnparente mas
                que pode ser aplicado cores através 
                da propriedade background-color*/

  width: 0%; /* para realizar a transição da barrinha 
                inicialmente é preciso que ela não pegue nada de largura das caixas 
                <a></a> do menu e por isso a width foi
                declarada com o valor de 0%. */
  height: 2px; /* visualmente é a grossura da barrinha*/

  background-color: var(--base-color); /*cor da barra*/
  position: absolute; /*nas ancoras foram declaradas a
                        position:relative; para o
                        pseudo elemento ser absoluto 
                        em relação a elas. o seletor
                        foi nav ul li a {}. 
  */
  left: 0; /*foi definido o deslocamento da esquerda 
  como zero(0) para a transição iniciar da esquerda
  e ser finaliza na direita*/
  bottom: -1.5rem; /* definido o deslocamento infeior como negativo para a barra ficar bem abaixo dos
  textos*/
  transition: width 0.3s;
}

nav ul li a:hover::after {
  /*relacionado as acoras que estão na lista do menu.
    ao passar o cursor do mouse sobre as opções do menu
    uma barrinha a baixo dos textos realizará uma 
    transição de 100% de largura(em relação as <a></a>)
    até o lado direito.
  */
  width: 100%;
}

/*QUANDO O MENU ESTIVER ABERTO*/
nav.show .menu {
  opacity: 1;
  visibility: visible;

  background-color: var(--body-color);
  width: 100vw; /*widht: 100vw é referente a largura da
  tela de visualização do dispositivo - divide a 
  largura da tela de visualziação em 100 pedaços 
  e pega os 100 pedaços para exibir o conteúdo*/
  height: 100vh; /*height: 100vh é referente a altura da
  tela de visualização do dispositivo - divide a 
  altura da tela de visualziação em 100 pedaços 
  e pega os 100 pedaços para exibir o conteúdo*/

  position: fixed; /*deixando a caixa menu fixa e 
  acima de tudo quando receber a class show */
  top: 0;
  left: 0;
  /*
    top: 0;  e  left: 0; são para deslocar  a caixa 
    nessas posições afim da caixa oucupar toda a tela
    de visualização.
     
  */
  display: grid; /*habilita novas possibilidades*/
  place-content: center; /*habilitada por causa 
                          do display: grid; acima*/
}

nav.show .menu ul {
  /*quando o menur ser requisitado/exibido a lista voltara
     a ser exibida com display:grid;*/
  display: grid; /*quando o usuário abria o menu inteiro piscava a lista de opções inteira e para corrigir esse 
   detalhe visual foi aplicado um display grid:none; na lista
   (nav .menu ul{}),é o estado inicial quando o menu está
   fechado. quando o usuário abrir o menu será aplicada o display:grid; exibindo a lista inteira e acabando com 
   impecilho visual. */
}

nav.show ul.grid {
  /*colocando espaço entre os <li> da lista*/
  gap: 6.4rem;
}

/*TOOGLE MENU */
.toggle {
  /* estilizando os icones do menu atraves da 
  class toggle */
  font-size: 2.4rem;
  color: var(--base-color);
}

nav .icon-close {
  /*não add no word*/
  visibility: hidden;
  opacity: 0;
  position: absolute;
  right: 2.4rem;
  top: -2.4rem; /*fazendo um deslocamento com um valor
                  muito negativo para que o icone subu e fique
                  fora da janela de visualização para descer
                  lentamento (aplicando a tasintion:;) para o
                  mesmo local*/

  transition: 0.2s; /*aplicando a transição para tudo*/
}

nav.show div.icon-close {
  /*não addei no relatorio*/
  visibility: visible;
  opacity: 1;
  /*não addei no relatorio*/
  top: 2.4rem; /*no nav .icon-close{} foi declarado um 
  top: -2.4rem para que ficasse muito acima saindo da janela de 
  visualização. no seletor nav.show div.icon-close{}  está
  aplicando as estilizações para quando o menu for 
  requisitado/exibido. a top: 2.4rem; faz com que ele se 
  desloque para uma posição dentro da janela de visualização
  possibbilitando visualiza-lo e realizar o click. */
}
/*========= HOME ================================*/

#home {
  overflow: hidden;
}
#home .container {
  margin: 0; /*zerando as margins de todas as caixas filhas
              que foi aplicada no seletor .container 
              (.text e .image)
              para deixa igual está no figma*/
}

#home .image {
  position: relative; /*deixando essa caixa relativa 
                       para o pseudo elemento não ser 
                       absoluto a caixa <body>*/
}

#home .image::before {
  /*este seletor vai criar o pseudo elemto da imagem*/
  content: ""; /*o conteudo é um background vazio*/
  width: 100%;
  height: 100%;
  background-color: var(--base-color-second);
  position: absolute; /*está absoluta a tudo na caixa
                      .image que é position: relative*/
  top: -16.8%;
  left: 16.7%;
  z-index: 0;
  /*z-index: ; define a profundidade da caixa 2D*/
}

#home .image img {
  /*estilizando a tag img da home*/
  position: relative;
  right: 4.7rem;
}

#home .image::before,
#home .image img {
  /*arredondando as bordas da imagem e 
  do pseudo elemento*/
  border-radius: 0.4rem;
}

#home .text {
  /*#home .text - criado para estilizar os textos da seção home*/
  /*voltando o padrão do margin aplicado no .container acima */
  margin-left: 2.4rem;
  margin-right: 2.4rem;
  text-align: center;
}

#home .text h2 {
  /*adicionado margem inferior na caixa h2 da seção
   home que se econtra na caixa .text*/
  margin-bottom: 1.6rem;
}

#home .text p {
  /*adicionado margem inferior na caixa <p> da seção
   home que se econtra na caixa .text*/
  margin-bottom: 3.2rem;
  max-width: 100%; /*para dar limite a caixa*/
}

/*========= ABOUT ================================*/
#about {
  background-color: white;
}
#about .container {
  margin: 0; /*zerando as margins de todas as caixas filhas
              que foi aplicada no seletor .container 
              (.text e .image)
              para deixa igual está no figma*/
}

#about .image {
  position: relative; /*deixando essa caixa relativa 
                       para o pseudo elemento não ser 
                       absoluto a caixa <body>*/
}

#about .image::before {
  /*este seletor vai criar o pseudo elemto da imagem*/
  content: ""; /*o conteudo é um background vazio*/
  width: 100%;
  height: 100%;
  background-color: var(--base-color-second);
  position: absolute; /*está absoluta a tudo na caixa
                      .image que é position: relative*/
  top: -8.2%;
  left: -33%;
  z-index: 0;
  /*z-index: ; define a profundidade da caixa 2D*/
}

#about .image img {
  /*estilizando a tag img da home*/
  position: relative;
  /*removi o deslocamento right: 4.7rem*/
}

#about .image::before,
#about .image img {
  /*arredondando as bordas da imagem e 
  do pseudo elemento*/
  border-radius: 0.4rem;
}

#about .text {
  /*#home .text - criado para estilizar os textos da seção home*/
  /*voltando o padrão do margin aplicado no .container acima */
  margin-left: 2.4rem;
  margin-right: 2.4rem;
  /*removi o text-aling: center;*/
}

/*======= SERVICES ======================================*/
.cards.grid {
  /*add nao regis*/
  gap: 2.4rem;
}

.card {
  padding: 5.8rem 3.2rem;
  box-shadow: 0 0 12px rgba(0, 0, 0, 0.08);
  border-bottom: 0.4rem solid var(--base-color);
  border-radius: 0.4rem 0.4rem 0 0;
  text-align: center; /*alinhando os textos no centro.
  lembrando que os icones viraram fontes logo eles 
  receberam aplicação da text-aling:center;*/
}

.card i {
  /*referente a estilização dos icones*/
  display: block; /*para habilitar a margin*/
  margin-bottom: 2.4rem; /*margin habilitada*/
  font-size: 8rem; /*tamanho dos icones*/
  color: var(--base-color); /*cor dos icones*/
}

.card .title {
  /*é os titulos do cardo da seção
  serviços*/
  font-size: 2.4rem;
  margin-bottom: 1.2rem;
}
